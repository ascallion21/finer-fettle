@page "/newsletter/footer"
@inject DisplayHelper DH
@inject AppState Model
@inject IOptions<SiteSettings> SiteSettings
@using Core.Models.Options
@using Microsoft.Extensions.Options

@if (!Model.User!.Demo)
{
    <a target="_blank" href="@($"https://aworkoutaday.com/u/{Model.User.Email}?token={Model.User.Token}")">Manage Preferences</a>
}

@if (Model.User.TimeUntilDeload.TotalDays > 0)
{
    <div><small><b>Days Until Deload</b> - @Model.User.TimeUntilDeload.TotalDays</small></div>
}

<div><small><b>Send Days</b> - @Model.User.SendDays.GetSingleDisplayName()</small></div>
<div><small><b>Workout Split</b> - @Model.User.Frequency.GetSingleDisplayName()</small></div>
@if (Model.User.IsNewToFitness)
{
    <div><small><b>Is New to Fitness</b> - @Model.User.IsNewToFitness</small></div>
}
else
{
    <div><small><b>Workout Intensity</b> - @Model.User.IntensityLevel.GetSingleDisplayName()</small></div>
}

@if (Model.User.RefreshFunctionalEveryXWeeks > 0)
{
    <div><small><b>Weeks Between Functional Refresh</b> - @Model.User.RefreshFunctionalEveryXWeeks</small></div>
}
@if (Model.User.RefreshAccessoryEveryXWeeks > 0)
{
    <div><small><b>Weeks Between Accessory Refresh</b> - @Model.User.RefreshAccessoryEveryXWeeks</small></div>
}

<div><small><b>Sports Focus</b> - @Model.User.SportsFocus.GetSingleDisplayName()</small></div>
@if (Model.User.IncludeMobilityWorkouts)
{
    <div><small><b>Prehab Focus</b> - @Model.User.PrehabFocus.GetSingleDisplayName()</small></div>
    <div><small><b>Rehab Focus</b> - @Model.User.RehabFocus.GetSingleDisplayName()</small></div>
}

<div><small><b>Footnote Types</b> - @Model.User.FootnoteType.GetDisplayName32()</small></div>
<div><small><b>Mobility Muscles</b> - @Model.User.MobilityMuscles.GetDisplayName32(EnumExtensions.DisplayNameType.ShortName)</small></div>
<div><small><b>Equipment</b> - <Lib.Pages.Shared.Exercise.Equipment UserEquipment="UserEquipment" AllEquipment="AllEquipment" /></small></div>

<div><small><b>Ignored Exercises</b> - @Model.User.UserExercises.Count(ep => ep.Ignore) Selected</small></div>
<div><small><b>Ignored Variations</b> - @Model.User.UserVariations.Count(ep => ep.Ignore) Selected</small></div>


@if (!Model.User.Demo)
{    
    <hr style="margin-block:1ex;">
    <a href="@($"https://aworkoutaday.com/u/{Model.User.Email}/d?token={Model.User.Token}")">Unsubscribe</a>

    <hr style="margin-block:1ex;">
    <a href="https://aworkoutaday.com/ImageAttribution">Image Attribution</a>

    <hr style="margin-block:1ex;">
    <span>
        <a href="https://aworkoutaday.com/Terms">Terms of Use</a> | <a href="https://aworkoutaday.com/Privacy">Privacy</a>
    </span>

    <hr style="margin-block:1ex;">
    
    <span>
        <a href="mailto:help@@@SiteSettings.Value.Domain">Contact Us</a> | <a href="@SiteSettings.Value.Source">Source</a>
    </span>
}
else
{
    @*
    <script>
        // Navigated back to the newsletter from the 'Too easy?'/'Too hard?' links. Refresh the demo content.
        if (!!window.performance && window.performance.navigation.type === 2) {
            // Refreshing the parent so the loading icon shows up
            window.parent.location.reload();
        }
    </script>
    *@
}

@code {
    [Parameter]
    public IList<ViewModels.Equipment.EquipmentViewModel> AllEquipment { get; set; } = null!;

    [Parameter]
    public IList<ViewModels.Equipment.EquipmentViewModel> UserEquipment { get; set; } = null!;
}