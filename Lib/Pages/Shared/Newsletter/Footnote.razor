@page "/newsletter/footnote"
@inject Services.NewsletterService NewsletterService
@inject DisplayHelper DH
@inject AppState AppState
@using System.Net
@using Core.Code.Extensions
@using Core.Models.Newsletter

@functions {
    string Debug(Dtos.Footnote.Footnote footnote)
    {
        return AppState.User!.EmailVerbosity.HasFlag(Verbosity.Debug)
            ? $"{footnote.Type.GetSingleDisplayName()} - "
            : string.Empty;
    }
}

@if (Footnotes == null)
{
    <div>Loading footnotes...</div>
}
else
{
    <div style="background-color:lavender;padding:1rem;margin-block:1rem;">
        <ul style="padding-inline-start:2ch;margin-block:0;">
            @foreach (var note in Footnotes)
            {
                if (string.IsNullOrEmpty(note.Source))
                {
                    <li>@Debug(note)@note.Note</li>
                }
                else
                {
                    var sourceIsLink = Uri.IsWellFormedUriString(note.Source, UriKind.Absolute);
                    if (sourceIsLink)
                    {
                        var sourceAsLink = new Uri(note.Source, UriKind.Absolute);
                        <li>@Debug(note)@note.Note <a target="_blank" href="@DH.StillHereLink(AppState.User!.Email, AppState.User.Token, note.Source)">[@sourceAsLink.Host.Replace("www.", string.Empty)]</a></li>
                    }
                    else
                    {
                        <li>@Debug(note)@note.Note — @note.Source</li>
                    }
                }
            }
        </ul>
    </div>
}

@code {
    private IList<Dtos.Footnote.Footnote>? Footnotes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //Footnotes = await NewsletterService.GetFootnotes(AppState.User, 2);
    }
}