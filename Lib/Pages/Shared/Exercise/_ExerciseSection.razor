@using Core.Models.Exercise
@using Core.Models.Newsletter;
@using Core.Models.User;

@if (Model.Exercises != null && Model.Exercises.Any())
{
    var titleColor = Model.Theme switch
    {
        ExerciseTheme.Warmup => "palevioletred",
        ExerciseTheme.Main => "mediumpurple",
        ExerciseTheme.Cooldown => "lightskyblue",
        ExerciseTheme.Extra => "lightgreen",
        ExerciseTheme.Other => "lightsalmon",
        _ => "currentColor"
    };

    if (Model.Title != null) 
    {
        <h2 style="margin-bottom:0;margin-top:1em;color:@titleColor;font-size:revert;line-height:initial;">@Model.Title</h2>
        @if (Model.Verbosity.HasFlag(Verbosity.Normal) && Model.Description != null)
        {
            <h6 style="margin-block:0;font-size:revert;">@Model.Description</h6>
        }
        <div style="margin-top:.2rem;display:flex;flex-flow:row wrap;gap:1ch;">
            @foreach (var item in Model.Exercises)
            {
                <_Exercise Model="item" />
            }
        </div>
    }
    else 
    {
        foreach (var group in Model.Exercises.GroupBy(e => e.Exercise).OrderBy(e => e.Key.Name))
        {
            <h2 style="margin-bottom:0;margin-top:1em;color:@titleColor;font-size:revert;line-height:initial;">@group.Key.Name</h2>
            @if (Model.Verbosity.HasFlag(Verbosity.Debug))
            {
                @* Make this easier to find on the page. *@
                <small>_@group.Key.Name.Replace(" ", "_")_</small>

                <p style="margin-block:0;"><b>Proficiency</b> - @group.Key.Proficiency</p>

                <p style="margin-block:0;"><b>Exercise Groups</b> - @group.Key.Groups.GetDisplayName32()</p>
                <div style="margin-block:.1ex;font-size:x-small;color:darkred"><b>Unused</b>: @ExerciseGroup.All.UnsetFlag32(group.Key.Groups).GetDisplayName32(EnumExtensions.DisplayNameType.ShortName)</div>

                @if (group.Key.Prerequisites?.Any() == true) 
                {
                    <p style="margin-block:0;"><b>Requires proficiency in</b> - @String.Join(", ", group.Key.Prerequisites.Select(e => e.PrerequisiteExercise.Name))</p>
                }
                
                @if (!string.IsNullOrEmpty(group.Key.Notes))
                {
                    <p style="margin-block:0;"><b>Notes</b> - @group.Key.Notes</p>
                }
            }
            <div style="margin-top:.2rem;display:flex;flex-flow:row wrap;gap:1ch;">
                @foreach (var item in group)
                {
                    <_Exercise Model="item"/>
                }
            </div>
        }
    }
}

@code {
    [Parameter, EditorRequired]
    [SupplyParameterFromQuery]
    public ViewModels.Exercise.ExerciseSectionViewModel Model { get; set; } = null!;
}