@inject DisplayHelper DH
@using Core.Models.Exercise
@using Core.Dtos.Exercise
@using Core.Dtos.User

@{
    void Pounds()
    {
        if (UserVariation != null)
        {
            var unilateral = Variation.Unilateral ? " (ea. side)" : "";
            var setsOrReps = Variation.PauseReps.HasValue ? " reps" : "s";
            if (Variation.IsWeighted && UserVariation.Weight > 0)
            {
                if (UserVariation.Sets > 0 && UserVariation.Reps > 0)
                {
                    <span>@UserVariation.Sets sets of @UserVariation.Reps@setsOrReps@unilateral (@UserVariation.Weight#)</span>
                }
                else
                {
                    <span>@UserVariation.Weight#</span>
                }

            }
            else if (UserVariation.Sets > 0 && UserVariation.Reps > 0)
            {
                <span>@UserVariation.Sets sets of @UserVariation.Reps@setsOrReps@unilateral</span>
            }
        }
    }
}

@if (UserVariation != null && (UserVariation.HasAbility || (Variation.IsWeighted && UserVariation.HasWeight)))
{
    <div style="margin-block:.5em;">
        <div style="margin-block:0;font-size:smaller;"><b>Last</b>: @{ Pounds(); }</div>

        @if (UserVariation.HasReps && UserVariation.HasSecs)
        {
            if (Variation.MuscleMovement.HasFlag(MuscleMovement.Isometric))
            {
                <h6 style="margin-block:0;font-weight:normal;font-size:.8em;">Hold the peak of each rep for @(UserVariation.Secs)s.</h6>
            }
            else
            {
                <h6 style="margin-block:0;font-weight:normal;font-size:.8em;">&star;&nbsp;<i>Hold the peak of each rep for @(UserVariation.Secs)s.</i></h6>
            }
        }
    </div>
}

@code {
    [Parameter]
    public UserVariationDto? UserVariation { get; set; } = null!;
    
    [Parameter]
    public VariationDto Variation { get; set; } = null!;
}