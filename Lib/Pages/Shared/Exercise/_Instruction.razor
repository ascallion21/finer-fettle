@inject DisplayHelper DH
@using Core.Models.Exercise

@{
    var name = Model.User == null 
        ? String.Join(" | ", Model.Instruction.Equipment.Select(e => e.Name))
        : String.Join(" | ", Model.Instruction.Equipment.IntersectBy(Model.User.EquipmentIds, e => e.Id).Select(e => e.Name));
}

<span>
    @if (String.IsNullOrEmpty(Model.Instruction.Link))
    {
        @:@name
    }
    else 
    {
        <a target="_blank" href="@Model.Instruction.Link">@name</a>
    }
    @if (Model.Instruction.Locations != null && Model.Instruction.Locations.Any())
    {
        <span style="display:inline-flex">(
        @for (var i = 0; i < Model.Instruction.Locations.Count; i++)
        {
            var instruction = Model.Instruction.Locations[i];
            <a target="_blank" href="@instruction.Link">@instruction.Location.GetSingleDisplayName()</a>
            @if (i < (Model.Instruction.Locations.Count - 1))
            {
                @:<span>,&nbsp;</span>
            }
        }
        )</span>
    }
</span>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public ViewModels.Newsletter.InstructionViewModel Model { get; set; } = null!;
}