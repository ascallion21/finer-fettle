@page "/newsletter/debug"
@inject AppState AppState
@inject DisplayHelper DH
@inject Services.NewsletterService NewsletterService
@inject NavigationManager Navigation
@using Core.Models.Exercise
@using Core.Models.Newsletter
@using Core.Models.Footnote
@using ViewModels.Exercise
@using ViewModels.Newsletter


@{
    var exerciseNames = string.Join(", ", Model.DebugExercises.GroupBy(e => e.Exercise).Select(g => g.Key.Name));
}

<partial name="Newsletter/_Preview" model='$"{exerciseNames}"' />

<div style="margin-block:1rem;">
    <h6 style="margin-block:0;"><i>@DateTime.UtcNow.ToLongDateString()</i></h6>
    <h1 style="margin-block:0;">Debug</h1>
    <h4 style="margin-block:0;display:inline-block;">@exerciseNames</h4>
</div>

<Lib.Pages.Newsletter.Components.Footnote.Footnote />
@*await Component.InvokeAsync(FootnoteViewComponent.Name, new { Model.User, Count = Model.FootnoteCount, OfType = FootnoteType.All })*@

<div style="margin-block:1rem;">
    <Lib.Pages.Shared.Exercise._ExerciseSection Model='@(new ExerciseSectionViewModel(Model.DebugExercises, Verbosity.Debug, ExerciseTheme.Extra))' />
</div>

<div style="margin-block:1rem;">
    <Lib.Pages.Lib.Pages.Shared.Exercise._Debug/>
</div>

<hr style="margin-block:1ex;">

<Lib.Pages.Newsletter.Components.Footer.Footer/>

@code {
    [Parameter]
    public DebugViewModel Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
    }
}