@page "/newsletter/{email}/{token}/{date}"
@inject AppState AppState
@inject DisplayHelper DH
@inject Services.NewsletterService NewsletterService
@inject Services.UserService UserService
@inject NavigationManager Navigation
@using Lib.Dtos.User;
@using Core.Models.Exercise
@using Core.Models.Newsletter
@using Core.Models.Footnote
@using ViewModels.Exercise

@if (Newsletter == null)
{
    <div>Loading newsletter...</div>
}
else
{
    <Newsletter Model="Newsletter" />
}

@code {
    [Parameter]
    public string Email { get; set; }

    [Parameter]
    public string Token { get; set; }

    [Parameter]
    public string Date { get; set; }

    private ViewModels.Newsletter.NewsletterViewModel? Newsletter { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var resp = await NewsletterService.Newsletter(Email, Token, DateOnly.Parse(Date));
        if (resp != null)
        {
            Newsletter = resp;
        }
    }
}