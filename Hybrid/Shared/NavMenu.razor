<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Hybrid</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="newsletter/newsletter">
                <span class="oi oi-plus" aria-hidden="true"></span> Newsletter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <a class="nav-link" href="newsletter/@Email/@Token/@Date">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Newsletter Wrapper
            </a>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private string Email { get; set; }
    private string Token { get; set; }
    private string Date { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Email = Preferences.Default.Get<string?>(nameof(PreferenceKeys.Email), null);
        Token = Preferences.Default.Get<string?>(nameof(PreferenceKeys.Email), null);
        Date = DateOnly.FromDateTime(DateTime.UtcNow).ToString("o");
    }
}
