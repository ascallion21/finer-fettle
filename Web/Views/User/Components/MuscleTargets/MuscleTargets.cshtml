@model MuscleTargetsViewModel
@using Core.Consts
@using Lib.ViewModels.User
@using Core.Models.Exercise
@using Data.Entities.User
@using Lib.Services

<h5 class="mb-0">Weekly Training Volume Targets</h5>
<h6 class="mb-1 font-weight--normal">@Model.Weeks week rolling average</h6>
<div class="alert alert-primary" role="alert">
    <div style="display:flex;flex-direction:column;row-gap:1ex;">
        @foreach (var muscleTarget in UserMuscleStrength.MuscleTargets(Model.User).Keys
            .Select(mg => Model.GetMuscleTarget(mg))
            .OrderByDescending(mt => mt.ShowButtons ? mt.End : mt.DefaultEnd)
            .ThenByDescending(mt => mt.ShowButtons ? mt.Start : mt.DefaultStart)
            .ThenBy(mt => mt.MuscleGroup.GetSingleDisplayName()).Append(new MuscleTargetsViewModel.MonthlyMuscle()
           {
               Start = 0,
               End = Model.MaxRangeValue,
               MuscleGroup = MuscleGroups.All,
               ShowButtons = true,
               UserMuscleTarget = new Range(Convert.ToInt32(Model.MaxRangeValue) / 4, Convert.ToInt32(Model.MaxRangeValue) / 4 * 3),
               DefaultStart = 0,
               DefaultEnd = Model.MaxRangeValue,
               ValueInRange = 50,
               IsMaxVolumeInRange = true,
               IsMinVolumeInRange = true,
           }))
        {
            var color = (muscleTarget.IsMinVolumeInRange, muscleTarget.IsMaxVolumeInRange, muscleTarget.ShowButtons) switch
            {
                // Max volume is out of range
                (_, false, true) => "orangered",
                // Min volume is out of range
                (false, _, true) => "darkorange",
                // Volume is in range
                _ => "limegreen",
            };

            <div style="display:flex;column-gap:1ch;flex-wrap:wrap;">
                <div style="display:flex;width:14ch;">@muscleTarget.MuscleGroup.GetSingleDisplayName()</div>

                <div style="display:flex;gap:1ch;align-items:center;flex:1 0 275px;">
                    <div style="display:flex;justify-content:space-between;">
                        @if (muscleTarget.ShowButtons)
                        {
                            <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.ResetMuscleRanges)" asp-route-email="@Model.User.Email" asp-route-token="@Model.Token" asp-route-muscleGroup="@muscleTarget.MuscleGroup" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <button class="btn btn-icon" type="submit">
                                    <img src="/images/user/restore-filled.svg">
                                </button>
                            </form>
                        }
                        else
                        {
                            <div class="btn-icon"></div>
                        }
                        @if (muscleTarget.ShowButtons && muscleTarget.UserMuscleTarget.Start.Value > 0)
                        {
                            <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.DecreaseStartMuscleRange)" asp-route-email="@Model.User.Email" asp-route-token="@Model.Token" asp-route-muscleGroup="@muscleTarget.MuscleGroup" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <button class="btn btn-icon" type="submit">
                                    <img src="/images/user/minus.svg">
                                </button>
                            </form>
                        }
                        else
                        {
                            <div class="btn-icon"></div>
                        }
                        @if (muscleTarget.ShowButtons && muscleTarget.UserMuscleTarget.Start.Value < Model.MaxRangeValue - UserConsts.IncrementMuscleTargetBy && muscleTarget.UserMuscleTarget.Start.Value < muscleTarget.UserMuscleTarget.End.Value - UserConsts.IncrementMuscleTargetBy)
                        {
                            <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.IncreaseStartMuscleRange)" asp-route-email="@Model.User.Email" asp-route-token="@Model.Token" asp-route-muscleGroup="@muscleTarget.MuscleGroup" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <button class="btn btn-icon" type="submit">
                                    <img src="/images/user/add.svg">
                                </button>
                            </form>
                        }
                        else
                        {
                            <div class="btn-icon"></div>
                        }
                    </div>
                    <div style="width:100%;position:relative;display:flex;">
                        <div style="position:absolute;bottom:-1px;height:2px;width:100%;background-color:@color;"></div>

                        @if (muscleTarget.ShowButtons)
                        {
                            @* User's muscle target *@
                            <div style="position:absolute;bottom:calc(-.5ex - 0px);height:1ex;width:100%;background:linear-gradient(90deg, transparent @muscleTarget.Start%, lightgreen @muscleTarget.Start% @muscleTarget.End%, transparent @muscleTarget.End%);"></div>
                        }
                        
                        @* Default muscle target *@
                        <div style="position:absolute;bottom:calc(-.5ex - 0px);height:1ex;width:100%;background:linear-gradient(90deg, transparent @muscleTarget.DefaultStart%, rgba(0,0,0,.1) @muscleTarget.DefaultStart% @muscleTarget.DefaultEnd%, transparent @muscleTarget.DefaultEnd%);"></div>

                        @* Actual muscle volume *@
                        <div style="position:absolute;bottom:calc(.5ex + 1px);left:calc(@muscleTarget.ValueInRange% - 1ch);width:2ch;text-align:center;font-size:xx-small;line-height:1;color:@color;">
                            &#9660;
                        </div>
                    </div>
                    <div style="display:flex;justify-content:space-between;">
                        @if (muscleTarget.ShowButtons && muscleTarget.UserMuscleTarget.End.Value > UserConsts.IncrementMuscleTargetBy && muscleTarget.UserMuscleTarget.End.Value > muscleTarget.UserMuscleTarget.Start.Value + UserConsts.IncrementMuscleTargetBy)
                        {
                            <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.DecreaseEndMuscleRange)" asp-route-email="@Model.User.Email" asp-route-token="@Model.Token" asp-route-muscleGroup="@muscleTarget.MuscleGroup" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <button class="btn btn-icon" type="submit">
                                    <img src="/images/user/minus.svg">
                                </button>
                            </form>
                        }
                        else
                        {
                            <div class="btn-icon"></div>
                        }
                        @if (muscleTarget.ShowButtons && muscleTarget.UserMuscleTarget.End.Value < Model.MaxRangeValue)
                        {
                            <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.IncreaseEndMuscleRange)" asp-route-email="@Model.User.Email" asp-route-token="@Model.Token" asp-route-muscleGroup="@muscleTarget.MuscleGroup" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <button class="btn btn-icon" type="submit">
                                    <img src="/images/user/add.svg">
                                </button>
                            </form>
                        }
                        else
                        {
                            <div class="btn-icon"></div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    <hr>
    <div class="small mb-3">Too much training volume per week can lead to joint pain and overuse injuries. Too little training volume per week may not result in any noticeable strength gain. Beginner lifters should skew towards the lower end of the range.</div>
    <div class="small">Only sports, functional, accessory, and core exercises are used in the calculation for this feature. Only muscle groups that are targeted by your current workout split are able to be adjusted. Workouts are being automatically adjusted to try and hit your muscle targets.</div>
</div>
