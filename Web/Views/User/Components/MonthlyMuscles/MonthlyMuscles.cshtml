@model ViewModels.User.MonthlyMusclesViewModel
@using Code.Extensions
@using Models.User
@using Models.Exercise

@{
    const double MinSetsPerWeek = 200d;
    const double MaxSetsPerWeek = 600d;
    var setsPerWeekAlertType = Model.WeeklyTimeUnderTensionAvg switch
    {
        > MaxSetsPerWeek => "alert-danger",
        < MinSetsPerWeek => "alert-warning",
        _ => "alert-success"
    };
    var muscleTargets = new Dictionary<MuscleGroups, Range>
    {
        [MuscleGroups.Glutes] = 250..750,
        [MuscleGroups.Abdominals] = 250..750,
        [MuscleGroups.Obliques] = 225..675,
        [MuscleGroups.Pectorals] = 225..675,
        [MuscleGroups.Deltoids] = 225..675,
        [MuscleGroups.Hamstrings] = 225..675,
        [MuscleGroups.Quadriceps] = 225..675,
        [MuscleGroups.LatissimusDorsi] = 225..675,
        [MuscleGroups.Trapezius] = 225..675,
        [MuscleGroups.Rhomboids] = 200..600,
        [MuscleGroups.ErectorSpinae] = 200..600,
        [MuscleGroups.Forearms] = 175..525,
        [MuscleGroups.Calves] = 175..525,
        [MuscleGroups.HipFlexors] = 175..525,
        [MuscleGroups.HipAdductors] = 175..525,
        [MuscleGroups.Biceps] = 150..450,
        [MuscleGroups.Triceps] = 150..450,
        [MuscleGroups.SerratusAnterior] = 150..450,
        [MuscleGroups.RotatorCuffs] = 150..450
    };
}

<div class="alert @setsPerWeekAlertType" role="alert">
    <div>You're avg weekly time under tension for each muscle group is ~@Model.WeeklyTimeUnderTensionAvg.ToString("F0")s.</div>
    <div style="margin-top:1rem;"><small>Aim for between @MinSetsPerWeek and @MaxSetsPerWeek seconds per week. Too many seconds per week can lead to joint pain and overuse injuries. Too few seconds per week may not result in any noticeable strength gain. Beginner lifters are should skew towards the lower end of the range.</small></div>
</div>

@if (Model.User.Email.EndsWith("finerfettle.com") || Model.User.Email.EndsWith("tscanlon.com"))
{
    <div class="alert alert-info" role="alert">
        <h3>Weekly Time Under Tension (beta)</h3>
        @foreach (var muscleGroup in muscleTargets.Keys
            .OrderByDescending(k => muscleTargets[k].Start.Value)
            .ThenByDescending(k => muscleTargets[k].End.Value)
            .ThenBy(k => k.GetSingleDisplayName()))
        {
            var start = muscleTargets[muscleGroup].Start.Value;
            var end = muscleTargets[muscleGroup].End.Value;
            var color = Model.WeeklyTimeUnderTension[muscleGroup] switch
            {
                int i when i > end => "red",
                int i when i < start => "orange",
                _ => "palegreen",
            };
            var valueInRange = Model.WeeklyTimeUnderTension[muscleGroup] / 750d * 100;
            <div style="display:flex;justify-content:space-between;column-gap:1rem;">
                <span style="display:flex;">@muscleGroup.GetSingleDisplayName() (@(Model.WeeklyTimeUnderTension[muscleGroup]))</span>
                <div style="display:flex;width:50%;align-items:center;">
                    <span style="height:10px;width:100%;border-radius:9in;background:linear-gradient(90deg, @color 0% @valueInRange%, rgba(0,0,0,.1) @valueInRange% 100%)"></span>
                </div>
            </div>
        }
    </div>
}
