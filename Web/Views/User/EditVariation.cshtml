@model UserEditVariationViewModel
@using Web.Controllers
@using Web.ViewModels.User
@using Web.Models.Exercise
@using Web.Models.User
@using System.Numerics
@using Web.Models.Newsletter
@using Code.Extensions

@{
    ViewData["Title"] = Model.VariationName;
}

<h1>Manage Variation</h1>

<hr />

<div class="row gap-3">
    <div class="col-lg-6">
        @if (Model.WasUpdated == false)
        {
            <div class="alert alert-danger alert-dismissible" role="alert">
                <span>Something went wrong.</span>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        else if (Model.WasUpdated == true)
        {
            <div class="alert alert-success alert-dismissible" role="alert">
                <span>Your preferences have been saved. Changes will be reflected in the next email.</span>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.EditVariation)" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Token" />
            <input type="hidden" asp-for="Email" />
            <input type="hidden" asp-for="VariationId" />
            <div class="form-group mb-3">
                <label for="disabled-email" class="control-label">@Html.DisplayNameFor(_ => Model.Email)</label>
                <input id="disabled-email" value="@Model.Email" class="form-control" disabled="disabled" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label for="disabled-variation" class="control-label">@Html.DisplayNameFor(_ => Model.VariationName)</label>
                <input id="disabled-variation" value="@Model.VariationName" class="form-control" disabled="disabled" />
                <span asp-validation-for="VariationName" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Pounds" class="control-label">@Html.DisplayNameFor(m => m.Pounds)</label>
                <div><span asp-validation-for="Pounds" class="text-danger"></span></div>
                <div style="display:flex;column-gap:1ex;">
                    <input type="number" asp-for="Pounds" style="width:6ch;height:fit-content;"
                           oninput="poundsInput.value = this.valueAsNumber" />
                    <div style="width:100%;display:flex;flex-direction:column;justify-content:center;">
                        <input type="range" style="width:100%;" 
                               name="poundsInput" list="hashmarks" id="pounds-input"
                               min="0" max="100" step="5" value="@Model.Pounds"
                               oninput="@(Html.NameFor(m => m.Pounds)).value = this.valueAsNumber" />

                        <datalist id="hashmarks"
                                  style="display:flex;flex-direction:column;writing-mode:vertical-lr;width:calc(100% - 2ch);position:relative;">
                            <option onclick="@(Html.NameFor(m => m.Pounds)).value = document.getElementById('pounds-input').value = this.value" value="15" style="text-decoration:underline;cursor:pointer;position:absolute;left:calc(15% - .5ch)" label="Extra Light Band"></option>
                            <option onclick="@(Html.NameFor(m => m.Pounds)).value = document.getElementById('pounds-input').value = this.value" value="30" style="text-decoration:underline;cursor:pointer;position:absolute;left:calc(30% - .5ch)" label="Light Band"></option>
                            <option onclick="@(Html.NameFor(m => m.Pounds)).value = document.getElementById('pounds-input').value = this.value" value="50" style="text-decoration:underline;cursor:pointer;position:absolute;left:calc(50% - .5ch)" label="Midweight Band"></option>
                            <option onclick="@(Html.NameFor(m => m.Pounds)).value = document.getElementById('pounds-input').value = this.value" value="75" style="text-decoration:underline;cursor:pointer;position:absolute;left:calc(75% - .5ch)" label="Heavy Band"></option>
                            <option onclick="@(Html.NameFor(m => m.Pounds)).value = document.getElementById('pounds-input').value = this.value" value="100" style="text-decoration:underline;cursor:pointer;position:absolute;right:-2.5ch" label="Extra Heavy Band"></option>
                        </datalist>
                    </div>
                </div>
                <div id="pounds-help" class="form-text"></div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
