@model Web.ViewModels.User.ManageExerciseVariationViewModel
@using System.Numerics
@using Core.Models.Exercise
@using Lib.ViewModels.User
@using Lib.ViewModels.Newsletter
@using Core.Models.Newsletter;

@{
    ViewData[ViewData_Blank.Title] = Model.Exercise.Name;
}

<div class="row gy-2 mb-2 mt-1 justify-content-between align-items-end">
    <div class="col-auto mb-3">
        <h1 class="primary-heading">Manage Exercise</h1>
        <h2 class="secondary-heading">@Model.Variation.Name</h2>
    </div>
    <div class="col-lg-6 m-0--empty">@if (Model.WasUpdated == false)
        {
            <div class="alert alert-danger alert-dismissible mb-1" role="alert">
                <span>Something went wrong.</span>
                <button type="button" class="btn-close" data-dismiss=".alert" aria-label="Close"></button>
            </div>
        }
        else if (Model.WasUpdated == true)
        {
            <div class="alert alert-success alert-dismissible mb-1" role="alert">
                <span>Your preferences have been saved. Changes will be reflected in the next workout.</span>
                <button type="button" class="btn-close" data-dismiss=".alert" aria-label="Close"></button>
            </div>
        }</div>
</div>

<div class="alert alert-secondary">
    <div class="row gy-2">
        <div class="col-lg-6">
            <div class="row gy-2">
                <div class="col-12">
                    <h6 class="mb-1">Exercise Variation</h6>
                    <div class="alert alert-light shadow">
                        <div class="form-group mb-3">
                            <label for="disabled-email" class="control-label">@Html.DisplayNameFor(_ => Model.Email)</label>
                            <input id="disabled-email" value="@Model.Email" class="form-control" disabled="disabled" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label for="disabled-type" class="control-label">@Html.DisplayNameFor(_ => Model.ExerciseVariation.ExerciseType)</label>
                            <input id="disabled-type" value="@Model.ExerciseVariation.ExerciseType.GetDisplayName32(EnumExtensions.DisplayNameType.ShortName)" class="form-control" disabled="disabled" />
                            <span asp-validation-for="ExerciseVariation.ExerciseType" class="text-danger"></span>
                        </div>

                        <form asp-controller="@UserController.Name" class="row" asp-action="@nameof(UserController.IgnoreExerciseVariation)" asp-route-email="@Model.Email" asp-route-token="@Model.Token" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" name="ExerciseVariationId" asp-for="UserExerciseVariation.ExerciseVariationId" />

                            <div class="form-group mb-3">
                                <label for="exercise-variation-name" class="control-label">@Html.DisplayNameFor(_ => Model.ExerciseVariation)</label>
                                <div class="input-group">
                                    <textarea id="exercise-variation-name" class="form-control" disabled="disabled" aria-describedby="exercise-variation-help" rows="1">@Model.ExerciseVariation.Variation.Name</textarea>
                                    <input type="submit" value="@(Model.UserExerciseVariation.Ignore ? "Ignored" : "Ignore")" class="btn btn-outline-secondary" />
                                </div>

                                <span asp-validation-for="ExerciseVariation" class="text-danger"></span>
                                <div id="exercise-variation-help" class="form-text">
                                    @Html.DisplayDescriptionFor(_ => Model.ExerciseVariation)
                                </div>
                            </div>
                        </form>

                        <form asp-controller="@UserController.Name" class="row" asp-action="@nameof(UserController.RefreshExerciseVariation)" asp-route-email="@Model.Email" asp-route-token="@Model.Token" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" name="ExerciseVariationId" asp-for="UserExerciseVariation.ExerciseVariationId" />

                            <div class="form-group">
                                <label for="exercise-variation-date" class="control-label">@Html.DisplayNameFor(_ => Model.UserExerciseVariation)</label>
                                <div class="input-group">
                                    <textarea id="exercise-variation-date" class="form-control" disabled="disabled" aria-describedby="exercise-variation-date-help" rows="1">@(Model.UserExerciseVariation.RefreshAfter ?? Model.UserExerciseVariation.LastSeen)</textarea>
                                    <input type="submit" value="Refresh" class="btn btn-outline-secondary" />
                                </div>

                                <span asp-validation-for="UserExerciseVariation" class="text-danger"></span>
                                <div id="exercise-variation-date-help" class="form-text">
                                    @Html.DisplayDescriptionFor(_ => Model.UserExerciseVariation)
                                </div>
                            </div>
                        </form>

                        <component type="typeof(Lib.Pages.Shared.Exercise._ExerciseSection)" render-mode="Static" param-Exercises='Model.ExerciseVariations' param-Theme='ExerciseTheme.Main' param-Verbosity="Verbosity.Quiet" />
                    </div>
                </div>

                <div class="col-12">
                    <h6 class="mb-1">Variation</h6>
                    <div class="alert alert-light shadow">
                        <div class="form-group mb-3">
                            <label for="disabled-email" class="control-label">@Html.DisplayNameFor(_ => Model.Email)</label>
                            <input id="disabled-email" value="@Model.Email" class="form-control" disabled="disabled" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <form asp-controller="@UserController.Name" class="row" asp-action="@nameof(UserController.IgnoreVariation)" asp-route-email="@Model.Email" asp-route-token="@Model.Token" method="post">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" name="ExerciseVariationId" asp-for="UserExerciseVariation.ExerciseVariationId" />

                            <div class="form-group">
                                <label for="variation-name" class="control-label">@Html.DisplayNameFor(_ => Model.Variation)</label>
                                <div class="input-group">
                                    <textarea id="variation-name" class="form-control" disabled="disabled" aria-describedby="variation-help" rows="1">@Model.Variation.Name</textarea>
                                    <input type="submit" value="@(Model.UserVariation.Ignore ? "Ignored" : "Ignore")" class="btn btn-outline-secondary" />
                                </div>

                                <span asp-validation-for="Variation" class="text-danger"></span>
                                <div id="variation-help" class="form-text">
                                    @Html.DisplayDescriptionFor(_ => Model.Variation)
                                </div>
                            </div>
                        </form>

                        <component type="typeof(Lib.Pages.Shared.Exercise._ExerciseSection)" render-mode="Static" param-Exercises='Model.Variations' param-Theme='ExerciseTheme.Main' param-Verbosity="Verbosity.Quiet" />
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <h6 class="mb-1">Exercise</h6>
            <div class="alert alert-light shadow">
                <div class="form-group mb-3">
                    <label for="disabled-email" class="control-label">@Html.DisplayNameFor(_ => Model.Email)</label>
                    <input id="disabled-email" value="@Model.Email" class="form-control" disabled="disabled" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.IgnoreExercise)" asp-route-email="@Model.Email" asp-route-token="@Model.Token" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" name="ExerciseVariationId" asp-for="UserExerciseVariation.ExerciseVariationId" />

                    <div class="form-group mb-3">
                        <label for="exercise-name" class="control-label">@Html.DisplayNameFor(_ => Model.Exercise)</label>
                        <div class="input-group">
                            <textarea id="exercise-name" class="form-control" disabled="disabled" aria-describedby="exercise-help" rows="1">@Model.Exercise.Name</textarea>
                            <input type="submit" value="@(Model.UserExercise.Ignore ? "Ignored" : "Ignore")" class="btn btn-outline-secondary" />
                        </div>
                        <span asp-validation-for="Exercise" class="text-danger"></span>
                        <div id="exercise-help" class="form-text">
                            @Html.DisplayDescriptionFor(_ => Model.Exercise)
                        </div>
                    </div>
                </form>

                <form asp-controller="@UserController.Name" class="row" asp-action="@nameof(UserController.RefreshExercise)" asp-route-email="@Model.Email" asp-route-token="@Model.Token" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" name="ExerciseVariationId" asp-for="UserExerciseVariation.ExerciseVariationId" />

                    <div class="form-group">
                        <label for="exercise-date" class="control-label">@Html.DisplayNameFor(_ => Model.UserExercise)</label>
                        <div class="input-group">
                            <textarea id="exercise-date" class="form-control" disabled="disabled" aria-describedby="exercise-date-help" rows="1">@(Model.UserExercise.RefreshAfter ?? Model.UserExercise.LastSeen)</textarea>
                            <input type="submit" value="Refresh" class="btn btn-outline-secondary" />
                        </div>

                        <span asp-validation-for="UserExercise" class="text-danger"></span>
                        <div id="exercise-date-help" class="form-text">
                            @Html.DisplayDescriptionFor(_ => Model.UserExercise)
                        </div>
                    </div>
                </form>

                <component type="typeof(Lib.Pages.Shared.Exercise._ExerciseSection)" render-mode="Static" param-Exercises='Model.Exercises' param-Theme='ExerciseTheme.Main' param-Verbosity="Verbosity.Quiet" />
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script>
        // Navigated back to the newsletter from the 'Too easy?'/'Too hard?' links. Refresh the demo content.
        if (!!window.performance && window.performance.navigation.type === 2) {
            // Go back to previous webpage
            window.history.back();
            // Go-back failed
            window.close();
        }
    </script>
}
