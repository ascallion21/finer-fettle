@model FooterViewModel

@if (!Model.User.Demo)
{
    <a target="_blank" href="@Url.StillHereLink(Model.User.Email, Model.User.Token, Url.ActionLink(nameof(UserController.Edit), UserController.Name, new { Model.User.Email, Model.User.Token }))">Manage Preferences</a>
}

@if (Model.User.TimeUntilDeload.TotalDays > 0)
{
    <div><small><b>@Html.DisplayNameFor(_ => Model.User.TimeUntilDeload)</b> - @Model.User.TimeUntilDeload.TotalDays</small></div>
}

<div><small><b>@Html.DisplayNameFor(_ => Model.User.SendDays)</b> - @Model.User.SendDays.GetSingleDisplayName()</small></div>
<div><small><b>@Html.DisplayNameFor(_ => Model.User.Frequency)</b> - @Model.User.Frequency.GetSingleDisplayName()</small></div>
@if (Model.User.IsNewToFitness)
{
    <div><small><b>@Html.DisplayNameFor(_ => Model.User.IsNewToFitness)</b> - @Model.User.IsNewToFitness</small></div>
}
else
{
    <div><small><b>@Html.DisplayNameFor(_ => Model.User.IntensityLevel)</b> - @Model.User.IntensityLevel.GetSingleDisplayName()</small></div>
}

@if (Model.User.RefreshFunctionalEveryXWeeks > 0)
{
    <div><small><b>@Html.DisplayNameFor(_ => Model.User.RefreshFunctionalEveryXWeeks)</b> - @Model.User.RefreshFunctionalEveryXWeeks</small></div>
}
@if (Model.User.RefreshAccessoryEveryXWeeks > 0)
{
    <div><small><b>@Html.DisplayNameFor(_ => Model.User.RefreshAccessoryEveryXWeeks)</b> - @Model.User.RefreshAccessoryEveryXWeeks</small></div>
}

<div><small><b>@Html.DisplayNameFor(_ => Model.User.SportsFocus)</b> - @Model.User.SportsFocus.GetSingleDisplayName()</small></div>
@if (Model.User.OffDayStretching)
{
    <div><small><b>@Html.DisplayNameFor(_ => Model.User.PrehabFocus)</b> - @Model.User.PrehabFocus.GetSingleDisplayName()</small></div>
    <div><small><b>@Html.DisplayNameFor(_ => Model.User.RehabFocus)</b> - @Model.User.RehabFocus.GetSingleDisplayName()</small></div>
}

<div><small><b>@Html.DisplayNameFor(_ => Model.User.FootnoteType)</b> - @Model.User.FootnoteType.GetDisplayName32()</small></div>
<div><small><b>@Html.DisplayNameFor(_ => Model.User.StretchingMuscles)</b> - @Model.User.StretchingMuscles.GetDisplayName32(EnumExtensions.DisplayNameType.ShortName)</small></div>
<div><small><b>@Html.DisplayNameFor(_ => Model.AllEquipment)</b> - @Html.DisplayFor(_ => Model.AllEquipment)</small></div>

<div><small><b>Ignored Exercises</b> - @Model.User.UserExercises.Count(ep => ep.Ignore) Selected</small></div>
<div><small><b>Ignored Variations</b> - @Model.User.UserVariations.Count(ep => ep.Ignore) Selected</small></div>

@if (!Model.User.Demo)
{    
    <hr style="margin-block:1ex;">
    <a href="@Url.ActionLink(nameof(UserController.Delete), UserController.Name, new { Model.User.Email, Model.User.Token })">Unsubscribe</a>

    <hr style="margin-block:1ex;">
    <a href="@Url.PageLink("/ImageAttribution")">Image Attribution</a>

    <hr style="margin-block:1ex;">
    <span>
        <a href="@Url.PageLink("/Terms")">Terms of Use</a> | <a href="@Url.PageLink("/Privacy")">Privacy</a>
    </span>

    <hr style="margin-block:1ex;">
    <a href="mailto:help@@@_siteSettings.Value.Domain">Contact Us</a>
}
else
{
    <script>
        // Navigated back to the newsletter from the 'Too easy?'/'Too hard?' links. Refresh the demo content.
        if (!!window.performance && window.performance.navigation.type === 2) {
            // Refreshing the parent so the loading icon shows up
            window.parent.location.reload();
        }
    </script>
}