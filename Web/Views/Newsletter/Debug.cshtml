@model ViewModels.Newsletter.DebugViewModel
@using Models.Exercise
@using Models.Newsletter

@{
    Layout = "_Blank";

    var exerciseNames = string.Join(", ", Model.DebugExercises.GroupBy(e => e.Exercise).Select(g => g.Key.Name));
}

<partial name="Newsletter/_Preview" model='$"{exerciseNames}"' />

<div style="margin-block:1rem;">
    <h6 style="margin-block:0;"><i>@DateTime.UtcNow.ToLongDateString()</i></h6>
    <h1 style="margin-block:0;">Debug</h1>
    <h4 style="margin-block:0;display:inline-block;">@exerciseNames</h4>
</div>

<div style="margin-block:1rem;">
    <partial name="Exercise/_ExerciseSection" model='new ExerciseSectionViewModel(Model.DebugExercises, Verbosity.Debug, ExerciseTheme.Extra)' />
</div>

<div style="margin-block:1rem;">
    <partial name="Exercise/_Debug" />
</div>

<div style="background-color:lavender;padding:1rem;margin-block:1rem;">
    @await Component.InvokeAsync(FootnoteViewComponent.Name, new { Count = Model.FootnoteCount })
</div>

<hr style="margin-block:1ex;">

@await Component.InvokeAsync(FooterViewComponent.Name, new { Model.User })
