@model Web.ViewModels.User.UserCreateViewModel
@using Web.Models.Exercise
@using Web.Models.User
@using Web.Models.Newsletter

@{
    ViewData[ViewData_Blank.Title] = "Consistent Fitness";
    ViewData[ViewData_Blank.Description] = "A personalizable workout routine newsletter.";
    ViewData[ViewData_Blank.Canonical] = $"{_siteSettings.Value.Scheme}://{_siteSettings.Value.Domain}";
}

<h1 class="primary-heading">Consistent fitness starts here</h1>

<h2 class="secondary-heading">A personalized workout routine delivered to your inbox daily</h2>

<div class="row g-4 pt-4">
    <div class="col-12 col-lg-5 col-xl-4">
        <div class="p-3 mb-3 create-wrapper">
            @if (Model.WasSubscribed == true || Model.WasUnsubscribed == true)
            {
                <div class="text-success d-flex justify-content-center logo">
                    @Html.Raw(File.ReadAllText(System.IO.Path.Combine(_webHostEnvironment.WebRootPath, "images/favicon-black-bg-color-check.svg")))
                </div>
                @if (Model.WasSubscribed == true) 
                {
                    <h3 class="text-center">Thank you for signing up!</h3>
                    <p class="font-weight--semibold text-center mb-3">Get ready! Your first workout is on its way.</p>
                    <p class="text-center">Click <a href="@Url.ActionLink(nameof(UserController.Edit), UserController.Name, new { Model.Email, Model.Token })">here</a> to personalize your routine.</p>
                } 
                else if (Model.WasUnsubscribed == true)
                {
                    <h3 class="text-center">We're sorry to see you go!</h3>
                    <p class="font-weight--semibold text-center mb-3">All of your data has been permanently deleted.</p>
                    <p class="text-center mb-3">Please contact us at <a href="mailto:goodbye@@@_siteSettings.Value.Domain">goodbye@@@_siteSettings.Value.Domain</a> and let us know how we can improve.</p>
                    <p class="text-center">Click <a href="@Url.ActionLink(nameof(IndexController.Index), IndexController.Name)">here</a> to resubscribe.</p>
                }
            } 
            else 
            {
                <div class="mb-4">
                    @if (Model.WasSubscribed == false || Model.WasUnsubscribed == false)
                    {
                        <div class="text-danger d-flex justify-content-center logo">
                            @Html.Raw(File.ReadAllText(System.IO.Path.Combine(_webHostEnvironment.WebRootPath, "images/favicon-black-bg-color-check.svg")))
                        </div>
                    }
                    else
                    {
                        <div class="d-flex justify-content-center logo">
                            @Html.Raw(File.ReadAllText(System.IO.Path.Combine(_webHostEnvironment.WebRootPath, "images/favicon-current-color.svg")))
                        </div>
                    }

                    @if (Model.WasUnsubscribed == false)
                    {
                        <h3 class="text-center">An unknown error occured.</h3>
                        <p class="font-weight--semibold text-center">Please contact us at <a href="mailto:help@finerfettle.com">help@finerfettle.com</a> to have your account deleted.</p>
                    }
                    else
                    {
                        // If Model.WasSubscribed == false, just show the validation messages in the form. No need to a 'something went wrong' message.
                        <p class="font-weight--semibold text-center">Sign up to receive our home workout routine newsletter and take the guesswork out of fitness!</p>
                    }
                </div>

                <form asp-controller="@IndexController.Name" asp-action="@nameof(IndexController.Create)" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group mb-3">
                        <label asp-for="Email" class="control-label" aria-describedby="email-help">@Html.DisplayNameFor(_ => Model.Email)</label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger word-break--break-word"></span>
                        <div id="email-help" class="form-text">@Html.DisplayDescriptionFor(m => m.Email)</div>
                    </div>
                    <div class="form-group form-check mb-3">
                        <div>
                            <span><label asp-for="IsNewToFitness" class="control-label">@Html.DisplayNameFor(_ => Model.IsNewToFitness)</label></span>
                            <input class="form-check-input" asp-for="IsNewToFitness" aria-describedby="fitness-help" />
                        </div>
                        <span asp-validation-for="IsNewToFitness" class="text-danger"></span>
                        <div id="fitness-help" class="form-text">@Html.DisplayDescriptionFor(m => m.IsNewToFitness)</div>
                    </div>
                    <div class="form-group form-check mb-3">
                        <div>
                            <span><label asp-for="AcceptedTerms" class="control-label">I agree to the</label> <a asp-area="" asp-page="/Terms">Terms of Use</a></span>
                            <input class="form-check-input" asp-for="AcceptedTerms" aria-describedby="terms-help" />
                        </div>
                        <span asp-validation-for="AcceptedTerms" class="text-danger"></span>
                        <div id="terms-help" class="form-text">@Html.DisplayDescriptionFor(m => m.AcceptedTerms)</div>
                    </div>
                    <div class="form-group mb-3">
                        <div>
                            <div class="form-check-inline">
                                <input checked class="form-check-input" id="IExistNo" name="IExist" type="radio" value="false" aria-describedby="bot-help" />
                                <span><label for="IExistNo" class="control-label">I'm a bot</label></span>
                            </div>
                            <div class="form-check-inline">
                                <input class="form-check-input" id="IExistYes" name="IExist" type="radio" value="true" aria-describedby="bot-help" />
                                <span><label for="IExistYes" class="control-label">I'm a human</label></span>
                            </div>
                        </div>
                        <span asp-validation-for="IExist" class="text-danger"></span>
                        <div id="bot-help" class="form-text">@Html.DisplayDescriptionFor(m => m.IExist)</div>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Send Me Workouts" class="btn btn-primary btn-caps font-weight--semibold w-100" style="letter-spacing:1px;" aria-describedby="join-help" />
                        <div id="join-help" class="form-text">Update your preferences or unsubscribe at any time.</div>
                    </div>
                </form>
            }
        </div>

        <details>
            <summary><i>Features</i></summary>

            <ul>
                <li>Customizable workout splits, intensity, and rest days.</li>
                <li>Workouts are simplified for users who are new to fitness to build consistency and reduce injury risk.</li>
                <li>Exercises are chosen based on the equipment you have access to — no pullups if you don&#39;t have a pullup bar or gymnastic rings.</li>
                <li>Exercises can be ignored — no more unwanted burpees!</li>
                <li>Exercises can be progressed or regressed to provide easier or harder variations of each exercise. This also ensures a consistent difficulty curve, so you don&#39;t work split squats before squats.</li>
                <li>Exercises can be set to refresh after a day or several months, depending on your preferred exercise variety.</li>
                <li>Keeps track of how much weight you are able to lift with each exercise.</li>
                <li>Keeps track of how often each muscle is being worked over time, and will automatically adjust workouts to remove muscle imbalances.</li>
                <li>Built-in deload weeks that automatically adjust your workout to reduce the strain placed upon your muscles that week.</li>
                <li>Optional health and fitness tips.</li>
                <li>Optional mobility workouts for rest days.</li>
                <li>Optional sports, injury prevention, and rehabilitation exercises.</li>
            </ul>
        </details>
    </div>

    <aside class="col-auto flex-grow-1 width--min-content">
        <div class="row" style="background:url('@Url.AbsoluteContent($"~/images/loader.svg")') center center no-repeat;">
            <i>Demo<span style="font-size:x-small">&nbsp;- some features are altered or disabled.</span></i>

            <!-- View is used in emails. Remove page styling by rendering it in an iframe -->
            <iframe class="col-12 gx-0 border border-5 w-100" style="height:80vh"
                    title="Demo - @_siteSettings.Value.Name"
                    onload="this.parentElement.style.background = null;"
                    src="@Url.ActionLink(nameof(NewsletterController.Newsletter), NewsletterController.Name)"></iframe>
        </div>
    </aside>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
