@model PrerequisiteViewModel
@using Core.Models.Exercise
@using Data.Entities.User
@using Lib.Pages.Shared.Exercise
@using Web.ViewModels.Components.UserExercise

@if (Model.VisiblePrerequisites.Any() || Model.InvisiblePrerequisites.Any())
{
    <details class="mt-4 mb-25">
        <summary class="mb-1 h5">
            <span style="color:@(Model.InvisiblePrerequisites.Any() ? "palevioletred" : "lightgreen")">Prerequisites</span>
            <span class="float-end">@(Model.VisiblePrerequisites.GroupBy(vm => vm.Exercise).Count() + Model.InvisiblePrerequisites.GroupBy(vm => vm.Exercise).Count())</span>
        </summary>

        @foreach (var exercises in Model.InvisiblePrerequisites.GroupBy(e => e, new PrerequisiteViewModel.ExerciseSectionComparer()).OrderBy(e => e.Key.Exercise.Name))
        {
            <component type="typeof(Lib.Pages.Shared.Exercise.ExerciseSection)" render-mode="Static" param-User="Model.UserNewsletter" param-Exercises='exercises' param-Theme='ExerciseTheme.Warmup' param-Verbosity="Model.Verbosity" param-Title="@(new ExerciseSection.Titles(exercises.Key.Exercise.Name, $"Requires proficiency of {Model.Prerequisites.First(p => p.PrerequisiteExerciseId == exercises.Key.Exercise.Id).Proficiency}%"))" />
        }

        @foreach (var exercises in Model.VisiblePrerequisites.GroupBy(e => e, new PrerequisiteViewModel.ExerciseSectionComparer()).OrderBy(e => e.Key.Exercise.Name))
        {
            <component type="typeof(Lib.Pages.Shared.Exercise.ExerciseSection)" render-mode="Static" param-User="Model.UserNewsletter" param-Exercises='exercises' param-Theme='ExerciseTheme.Extra' param-Verbosity="Model.Verbosity" param-Title="@(new ExerciseSection.Titles(exercises.Key.Exercise.Name, $"Requires proficiency of {Model.Prerequisites.First(p => p.PrerequisiteExerciseId == exercises.Key.Exercise.Id).Proficiency}%"))" />
        }
    </details>
}
