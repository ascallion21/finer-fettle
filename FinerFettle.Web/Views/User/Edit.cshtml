@model FinerFettle.Web.ViewModels.User.UserViewModel
@using FinerFettle.Web.Controllers
@using FinerFettle.Web.Models.Exercise
@using FinerFettle.Web.Models.User
@using System.Numerics
@using FinerFettle.Web.Models.Newsletter
@using Extensions

@{
    ViewData["Title"] = "Preferences";
}

<h1>Manage Preferences</h1>

<hr />

<div class="row">
    <div class="col-md-10 col-lg-8 col-xl-6">
        @if (Model.Disabled) 
        {
            <div class="alert alert-warning" role="alert">
                <span>Your account is disabled.</span>
            </div>
        }
        else if (Model.WasUpdated == false)
        {
            <div class="alert alert-danger alert-dismissible" role="alert">
                <span>Something went wrong.</span>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        else if (Model.WasUpdated == true) 
        {
            <div class="alert alert-success alert-dismissible" role="alert">
                <span>Your preferences have been saved. Changes will be reflected in the next email.</span>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.Edit)" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Token" />
            <input type="hidden" asp-for="Email" />
            <input type="hidden" asp-for="AcceptedTerms" />
            <input type="hidden" asp-for="IExist" value="true" />
            <div class="form-group mb-3">
                <label for="disabled-email" class="control-label">@Html.DisplayNameFor(_ => Model.Email)</label>
                <input id="disabled-email" value="@Model.Email" class="form-control" disabled="disabled" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="StrengtheningPreference" class="control-label">@Html.DisplayNameFor(m => m.StrengtheningPreference)</label>
                <select asp-for="StrengtheningPreference" class="form-control" aria-describedby="strength-help"
                        asp-items="@(Html.GetEnumSelectList<StrengtheningPreference>())">
                </select>
                <span asp-validation-for="StrengtheningPreference" class="text-danger"></span>
                <details id="strength-help" class="form-text">
                    <summary>What's this?</summary>

                    <div><b>@StrengtheningPreference.Maintain.GetSingleDisplayName()</b> - @StrengtheningPreference.Maintain.GetSingleDisplayName(EnumExtensions.DisplayNameType.Description)</div>
                    <div><b>@StrengtheningPreference.Obtain.GetSingleDisplayName()</b> - @StrengtheningPreference.Obtain.GetSingleDisplayName(EnumExtensions.DisplayNameType.Description)</div>
                    <div><b>@StrengtheningPreference.Gain.GetSingleDisplayName()</b> - @StrengtheningPreference.Gain.GetSingleDisplayName(EnumExtensions.DisplayNameType.Description)</div>
                </details>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Frequency" class="control-label">@Html.DisplayNameFor(m => m.Frequency)</label>
                <select asp-for="Frequency" class="form-control" aria-describedby="frequency-help"
                        asp-items="@(Html.GetEnumSelectList<Frequency>())">
                </select>
                <span asp-validation-for="Frequency" class="text-danger"></span>
                <details id="frequency-help" class="form-text">
                    <summary>What's this?</summary>

                    <div><b>@Frequency.FullBody.GetSingleDisplayName()</b> - @Frequency.FullBody.GetSingleDisplayName(EnumExtensions.DisplayNameType.Description)</div>
                    <div><b>@Frequency.UpperLowerBodySplit.GetSingleDisplayName()</b> - @Frequency.UpperLowerBodySplit.GetSingleDisplayName(EnumExtensions.DisplayNameType.Description)</div>
                    <div><i>All routines will include a full body stability workout each week.</i></div>
                </details>
            </div>
            <div class="form-group form-check mb-3">
                <label asp-for="IncludeBonus" class="control-label">@Html.DisplayNameFor(m => m.IncludeBonus)</label>
                <input class="form-check-input" asp-for="IncludeBonus" aria-describedby="bonus-help" />
                <span asp-validation-for="IncludeBonus" class="text-danger"></span>
                <div id="bonus-help" class="form-text">Select this to add more exercise variety to your workout.</div>
            </div>
            <div class="form-group form-check mb-3">
                <label asp-for="PrefersWeights" class="control-label">@Html.DisplayNameFor(m => m.PrefersWeights)</label>
                <input class="form-check-input" asp-for="PrefersWeights" aria-describedby="weights-help" />
                <span asp-validation-for="PrefersWeights" class="text-danger"></span>
                <div id="weights-help" class="form-text">Prioritize exercises that use free weights over bodyweight variations.</div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="EquipmentBinder" class="control-label">@Html.DisplayNameFor(m => m.Equipment)</label>
                <select asp-for="EquipmentBinder" class="form-control" aria-describedby="equipment-help"
                        asp-items="Model.Equipment.Select(v => new SelectListItem { Text = v.Name, Value = v.Id.ToString() })">
                </select>
                <span asp-validation-for="EquipmentBinder" class="text-danger"></span>
                <div id="equipment-help" class="form-text">Choose equipment you have access to each day.</div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="SportsFocus" class="control-label">@Html.DisplayNameFor(m => m.SportsFocus)</label>
                <select asp-for="SportsFocus" class="form-control" aria-describedby="sports-help"
                        asp-items='Enum.GetValues(typeof(SportsFocus)).Cast<SportsFocus>().Select(v => new SelectListItem { Text = v.GetSingleDisplayName(), Value = ((int)v).ToString() })'>
                </select>
                <span asp-validation-for="SportsFocus" class="text-danger"></span>
                <div id="sports-help" class="form-text">Include additional exercises that focus on the muscles and movements involved in a particular sport.</div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="RecoveryMuscle" class="control-label">@Html.DisplayNameFor(m => m.RecoveryMuscle)</label>
                <select asp-for="RecoveryMuscle" class="form-control" aria-describedby="recovery-help"
                        asp-items='Enum.GetValues(typeof(MuscleGroups)).Cast<MuscleGroups>().Where(mg => BitOperations.PopCount((ulong)mg) <= 1).Select(v => new SelectListItem { Text = v.GetSingleDisplayName(), Value = ((int)v).ToString() })'>
                </select>
                <span asp-validation-for="RecoveryMuscle" class="text-danger"></span>
                <details id="recovery-help" class="form-text">
                    <summary>Recovering a specific muscle group from injury?</summary>

                    <span>This will lower your progression of every exercise that impacts that muscle, and will optimize your workout to build back up it's strength without straining it.</span>
                </details>
            </div>
            <div class="form-group mb-3">
                <label asp-for="EmailVerbosity" class="control-label">@Html.DisplayNameFor(m => m.EmailVerbosity)</label>
                <select asp-for="EmailVerbosity" class="form-control" aria-describedby="verbosity-help" 
                        asp-items="@(Html.GetEnumSelectList<Verbosity>()).Where(e => !string.IsNullOrEmpty(e.Text))">
                </select>
                <span asp-validation-for="EmailVerbosity" class="text-danger"></span>
                <div id="verbosity-help" class="form-text">Choose the level of detail you want to receive in each email.</div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="RestDaysBinder" class="control-label">@Html.DisplayNameFor(m => m.RestDays)</label>
                <select asp-for="RestDaysBinder" class="form-control" aria-describedby="rest-help"
                        asp-items="Enum.GetValues(typeof(RestDays)).Cast<RestDays>().Where(e => e != RestDays.None).Select(v => new SelectListItem { Text = v.ToString(), Value = ((int)v).ToString()})">
                </select>
                <span asp-validation-for="RestDaysBinder" class="text-danger"></span>
                <div id="rest-help" class="form-text">Choose which days you want to take a break.</div>
            </div>
            @if (Model.IgnoredExercises != null && Model.IgnoredExercises.Any())
            {
                <div class="form-group mb-3">
                    <label asp-for="IgnoredExerciseBinder" class="control-label">@Html.DisplayNameFor(m => m.IgnoredExercises)</label>
                    <select asp-for="IgnoredExerciseBinder" class="form-control" aria-describedby="exercise-help"
                        asp-items="Model.IgnoredExercises.Select(v => new SelectListItem { Text = v.Name, Value = v.Id.ToString() })">
                    </select>
                    <span asp-validation-for="IgnoredExerciseBinder" class="text-danger"></span>
                    <div id="exercise-help" class="form-text">Choose exercises you want to ignore.</div>
                </div>
            }
            <div class="form-group form-check mb-3">
                <label asp-for="Disabled" class="control-label">@Html.DisplayNameFor(m => m.Disabled)</label>
                <input class="form-check-input" asp-for="Disabled" aria-describedby="disabled-help" />
                <span asp-validation-for="Disabled" class="text-danger"></span>
                <div id="disabled-help" class="form-text">
                    Stop receiving email without deleting your account.
                    @if (!String.IsNullOrEmpty(Model.DisabledReason))
                    {
                        <div><b>Reason</b> - @Model.DisabledReason</div>
                    }
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
