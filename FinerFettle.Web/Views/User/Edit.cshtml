@model FinerFettle.Web.ViewModels.User.UserViewModel
@using FinerFettle.Web.Controllers
@using FinerFettle.Web.Models.Exercise
@using FinerFettle.Web.Models.User
@using System.Numerics
@using FinerFettle.Web.Models.Newsletter
@using Extensions

@{
    ViewData["Title"] = "Preferences";
}

<h1>Manage Preferences</h1>

<hr />

<div class="row">
    <div class="col-md-10 col-lg-8 col-xl-6">
        @if (Model.Disabled) 
        {
            <div style="background-color:lightpink;padding:1rem;margin-block:1rem;">
                <span>Your account is disabled.</span>
            </div>
        }

        <form asp-controller="@UserController.Name" asp-action="@nameof(UserController.Edit)" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Token" />
            <input type="hidden" asp-for="Email" />
            <input type="hidden" asp-for="AcceptedTerms" />
            <div class="form-group mb-3">
                <label asp-for="Email" class="control-label"></label>
                <input value="@Model.Email" class="form-control" disabled="disabled" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            
            <div class="form-group mb-3">
                <label asp-for="StrengtheningPreference" class="control-label">@Html.DisplayNameFor(m => m.StrengtheningPreference)</label>
                <select asp-for="StrengtheningPreference" class="form-control" aria-describedby="strength-help"
                        asp-items="@(Html.GetEnumSelectList<StrengtheningPreference>())">
                </select>
                <span asp-validation-for="StrengtheningPreference" class="text-danger"></span>
                <div id="strength-help" class="form-text">
                    <div><b>Maintain</b> - Workouts will work the whole body at a low intensity.</div>
                    <div><b>Obtain</b> - Workouts will be split into two medium intensity upper/lower body days or will work the whole body at a medium intensity.</div>
                    <div><b>Gain</b> - Workouts will be split into two high intensity upper/lower body days.</div>
                    <div><i>All routines will include a full body stability workout each week.</i></div>
                </div>
            </div>
            <div class="form-group form-check mb-3">
                <label asp-for="IncludeBonus" class="control-label">@Html.DisplayNameFor(m => m.IncludeBonus)</label>
                <input class="form-check-input" asp-for="IncludeBonus" aria-describedby="core-help" />
                <span asp-validation-for="IncludeBonus" class="text-danger"></span>
                <div id="core-help" class="form-text">Incldue bonus exercises.</div>
            </div>
            <div class="form-group form-check mb-3">
                <label asp-for="PrefersWeights" class="control-label">@Html.DisplayNameFor(m => m.PrefersWeights)</label>
                <input class="form-check-input" asp-for="PrefersWeights" aria-describedby="weights-help" />
                <span asp-validation-for="PrefersWeights" class="text-danger"></span>
                <div id="weights-help" class="form-text">Prioritize exercises that use free weights over bodyweight variations.</div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="EquipmentBinder" class="control-label">@Html.DisplayNameFor(m => m.Equipment)</label>
                <select asp-for="EquipmentBinder" class="form-control" aria-describedby="equipment-help"
                        asp-items="Model.Equipment.Select(v => new SelectListItem { Text = v.Name, Value = v.Id.ToString() })">
                </select>
                <span asp-validation-for="EquipmentBinder" class="text-danger"></span>
                <div id="equipment-help" class="form-text">Choose equipment you have access to each day.</div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="SportsFocus" class="control-label">@Html.DisplayNameFor(m => m.SportsFocus)</label>
                <select asp-for="SportsFocus" class="form-control" aria-describedby="sports-help"
                        asp-items='Enum.GetValues(typeof(SportsFocus)).Cast<SportsFocus>().Select(v => new SelectListItem { Text = v.GetSingleDisplayName(), Value = ((int)v).ToString() })'>
                </select>
                <span asp-validation-for="SportsFocus" class="text-danger"></span>
                <div id="sports-help" class="form-text">Include additional exercises that focus on the muscles and movements involved in a particular sport.</div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="RecoveryMuscle" class="control-label">@Html.DisplayNameFor(m => m.RecoveryMuscle)</label>
                <select asp-for="RecoveryMuscle" class="form-control" aria-describedby="recovery-help"
                        asp-items='Enum.GetValues(typeof(MuscleGroups)).Cast<MuscleGroups>().Where(mg => BitOperations.PopCount((ulong)mg) <= 1).Select(v => new SelectListItem { Text = v.GetSingleDisplayName(), Value = ((int)v).ToString() })'>
                </select>
                <span asp-validation-for="RecoveryMuscle" class="text-danger"></span>
                <div id="recovery-help" class="form-text">Recovering a specific muscle group from injury? This will lower your progression of every exercise that impacts that muscle, and will optimize your workout to build back up it's strength without straining it.</div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="EmailVerbosity" class="control-label">@Html.DisplayNameFor(m => m.EmailVerbosity)</label>
                <select asp-for="EmailVerbosity" class="form-control" aria-describedby="verbosity-help" 
                        asp-items="@(Html.GetEnumSelectList<Verbosity>()).Where(e => !string.IsNullOrEmpty(e.Text))">
                </select>
                <span asp-validation-for="EmailVerbosity" class="text-danger"></span>
                <div id="verbosity-help" class="form-text">Choose the level of detail you want to receive in each email.</div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="RestDaysBinder" class="control-label">@Html.DisplayNameFor(m => m.RestDays)</label>
                <select asp-for="RestDaysBinder" class="form-control" aria-describedby="rest-help"
                        asp-items="Enum.GetValues(typeof(RestDays)).Cast<RestDays>().Where(e => e != RestDays.None).Select(v => new SelectListItem { Text = v.ToString(), Value = ((int)v).ToString()})">
                </select>
                <span asp-validation-for="RestDaysBinder" class="text-danger"></span>
                <div id="rest-help" class="form-text">Choose which days you want to take a break.</div>
            </div>
            @if (Model.IgnoredExercises != null && Model.IgnoredExercises.Any())
            {
                <div class="form-group mb-3">
                    <label asp-for="IgnoredExerciseBinder" class="control-label">@Html.DisplayNameFor(m => m.IgnoredExercises)</label>
                    <select asp-for="IgnoredExerciseBinder" class="form-control" aria-describedby="exercise-help"
                        asp-items="Model.IgnoredExercises.Select(v => new SelectListItem { Text = v.Name, Value = v.Id.ToString() })">
                    </select>
                    <span asp-validation-for="IgnoredExerciseBinder" class="text-danger"></span>
                    <div id="exercise-help" class="form-text">Choose exercises you want to ignore.</div>
                </div>
            }
            <div class="form-group form-check mb-3">
                <label asp-for="Disabled" class="control-label">@Html.DisplayNameFor(m => m.Disabled)</label>
                <input class="form-check-input" asp-for="Disabled" aria-describedby="disabled-help" />
                <span asp-validation-for="Disabled" class="text-danger"></span>
                <div id="disabled-help" class="form-text">
                    Stop receiving email without deleting your account.
                    @if (!String.IsNullOrEmpty(Model.DisabledReason))
                    {
                        <div><b>Reason</b> - @Model.DisabledReason</div>
                    }
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
