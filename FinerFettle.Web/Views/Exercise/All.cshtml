@model ViewModels.Newsletter.NewsletterViewModel
@using Models.Exercise
@using Extensions
@using Controllers

@{
    ViewData["Title"] = "Exercises";
    Layout = "_Blank";
}

<div>
    <h1 style="margin-bottom:0;">Workout Routine</h1>
    <h5 style="margin-top:0;">@DateTime.Today.ToLongDateString()</h5>
</div>

<div>
    @if (Model.WarmupExercises != null && Model.WarmupExercises.Any())
    {
        <h2 style="margin-bottom:0;color:palevioletred">Warmup</h2>
        <div style="display:flex;flex-flow:row wrap;gap:1ch;">
            @foreach (var item in Model.WarmupExercises)
            {
                @await Component.InvokeAsync("Exercise", new { ViewModel = item, Model.Verbosity })
            }
        </div>
    }

    <h2 style="margin-bottom:0;color:palegreen;">Workout</h2>
    <div style="display:flex;flex-flow:row wrap;gap:1ch;">
        @foreach (var item in Model.Exercises)
        {
            @await Component.InvokeAsync("Exercise", new { ViewModel = item, Model.Verbosity })
        }
    </div>

    @if (Model.CooldownExercises != null && Model.CooldownExercises.Any())
    {
        <h2 style="margin-bottom:0;color:lightskyblue">Cooldown</h2>
        <div style="display:flex;flex-flow:row wrap;gap:1ch;">
            @foreach (var item in Model.CooldownExercises)
            {
                @await Component.InvokeAsync("Exercise", new { ViewModel = item, Model.Verbosity })
            }
        </div>
    }
</div>

<a href="@Url.AbsoluteContent("~/images/ATTRIBUTION.html")">Image attribution</a>
