@model IList<ViewModels.Newsletter.ExerciseViewModel>
@using Microsoft.AspNetCore.Http.Extensions
@using Extensions
@using Models.Exercise
@using ViewModels.Newsletter

<div style="display:flex;flex-flow:row wrap;gap:1ch;">
@foreach (var item in Model) {
    var borderColor = item.ActivityLevel switch
    {
        ExerciseActivityLevel.Main => "gray",
        ExerciseActivityLevel.Cooldown => "lightskyblue",
        ExerciseActivityLevel.Warmup => "palevioletred",
        _ => "gray"
    };
    <div style="flex:1 0 200px;border:1px solid @borderColor;padding:1rem;">
        <h3 style="margin-bottom:0;margin-top:0;"><a href="@item.Exercise.Instruction">@Html.DisplayFor(modelItem => item.Exercise.Name)</a></h3>

        <ul style="padding-inline-start:2ch;">
            @if (item.Equipment.Any())
            {
                <li>
                    <div>@Html.DisplayNameFor(model => item.Equipment)</div>
                    <small>@String.Join(", ", item.Equipment.Select(e => e.Name).Distinct())</small>
                </li> 
            }
            <li>
                <div>@Html.DisplayNameFor(model => item.Muscles)</div>
                <small>@item.Muscles.GetDisplayName32()</small>
            </li>
            <li>
                <div>Target</div>
                <small>
                    @Html.DisplayFor(m => item.Intensity)
                </small>
            </li>
        </ul>

        <div style="height:200px;background-size:contain;background-repeat:no-repeat;background-image:url('@Url.AbsoluteContent($"~/images/{item.Exercise.Code}.webp")'),url('@Url.AbsoluteContent($"~/images/{item.Exercise.Code}.jpg")');"></div>
    </div>
}
 </div>
