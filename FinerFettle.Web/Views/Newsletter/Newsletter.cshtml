@model ViewModels.Newsletter.NewsletterViewModel
@using Models.Exercise
@using Extensions
@using Controllers

@{
    ViewData["Title"] = "Newsletter";
}

<h1>Newsletter</h1>

@if (Model.Exercises != null && Model.Exercises.Any()) {
    @await Html.PartialAsync("Exercises", Model.Exercises)
}
else {
    @await Html.PartialAsync("Rest")
}

<hr />

<ul>
@for (var i = 0; i < 2; i++)
{
    <li>@await Component.InvokeAsync("Footnote")</li>
}
</ul>

<hr />

@if (Model.User != null)
{
    <a href="@Url.ActionLink(nameof(UserController.ThatWorkoutWasEasy), UserController.Name, new { Model.User.Email })">This workout was too easy</a>
    <span> | </span>
    <a href="@Url.ActionLink(nameof(UserController.ThatWorkoutWasTough), UserController.Name, new { Model.User.Email })">This workout was too hard</a>
    <br /><a href="@Url.ActionLink(nameof(UserController.Edit), UserController.Name, new { Model.User.Email })">Manage Preferences</a>    
    
    <hr />
    
    <a href="@Url.ActionLink(nameof(UserController.Delete), UserController.Name, new { Model.User.Email })">Unsubscribe</a>    
}

<hr />

<a href="@Url.AbsoluteContent("~/images/ATTRIBUTION.html")">Image attribution</a>
